########################################
# Mcu
########################################
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_330018001747313338353239-if00

########################################
# Printer configuration
########################################
[printer]
kinematics: cartesian   # 机器类型分别为cartesian（一般机型）、corexy（corexy机型）、delta（三角洲机型），根据自己的机器进行设置。
max_velocity: 500
#max_accel: 10000
max_accel: 3000
max_z_velocity: 10
max_z_accel: 100

########################################
# Strpper & Heat configuration
########################################
[stepper_x]
step_pin: PF2               # 步进引脚. 如果需要上拉需加上: ^
dir_pin: PF3
enable_pin: !PF4
microsteps: 16
rotation_distance: 33       # 电机转动参数需要配置“旋转距离”，rotation_distance = ((360°/1.8°) * microsteps) / 80 {旋转距离 = （圆周360°/步距角）*细分/每MM脉冲值}
step_pulse_duration: 0.000005
#   step脉冲信号边缘与后续的"unstep"信号边缘之间的最短时间。
#   这也用于设置step脉冲和方向变化信号之间的最短时间。对于在 UART 或 SPI 模式下配置的 TMC 步进器，默认值为0.000000100（100ns），
#   对于所有其他步进器，默认值为0.000002（即2us）。
endstop_pin: ^!PF14           # 若要配置为无限位复位,此处应配置为 tmc2209_stepper_x:virtual_endstop 注:tmc2209是下方支持无限位复位的驱动名
position_endstop: -78       # 限位脚所在位置,也是复位方向,0最小位置方向, position_max最大位置方向
position_min: -78
position_max: 600           # 轴最大位置
homing_speed: 130

[stepper_y]
step_pin: PF10
dir_pin: !PC0
enable_pin: !PC1
microsteps: 16
rotation_distance: 33
step_pulse_duration: 0.000005
endstop_pin: ^!PF13
position_endstop: -8
position_min: -8
position_max: 600
homing_speed: 130

[stepper_z]
step_pin: PC2
dir_pin: PC3
enable_pin: !PA1
microsteps: 16
rotation_distance: 2.5
step_pulse_duration: 0.000010
endstop_pin: probe:z_virtual_endstop
# position_endstop: 0
position_min: -5
position_max: 600
homing_speed: 5

# [stepper_z1]
# step_pin: PC1
# dir_pin: PC0
# enable_pin: !PC2
# microsteps: 16
# rotation_distance: 8
# endstop_pin: !PD3
# position_endstop: 0.5
# position_max: 260

[extruder]
step_pin: PB7
dir_pin: PB6
enable_pin: !PE0
microsteps: 16
rotation_distance: 7.5
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PD11
sensor_type: PT1000
#sensor_type: EPCOS 100K B57560G104F
sensor_pin: PF6
control: pid                 # 温度调控:PID
pid_Kp: 18.467               # 自动调控PID值: 发送命令"PID_CALIBRATE HEATER=extruder TARGET=220" pid_Kp=18.134 pid_Ki=0.889 pid_Kd=92.484
pid_Ki: 0.889
pid_Kd: 92.484
min_temp: -100
max_temp: 310
#pressure_advance: 0.134
#add by Sampson
max_extrude_cross_section: 5

[extruder1]
step_pin: PE3
dir_pin: !PE2
enable_pin: !PE4
microsteps: 16
rotation_distance: 7.5
nozzle_diameter: 0.400
filament_diameter: 1.750
heater_pin: PD12
sensor_type: PT1000
sensor_pin: PF5
control: pid                 # 温度调控:PID
pid_Kp: 18.467               # 自动调控PID值: 发送命令"PID_CALIBRATE HEATER=extruder TARGET=220" pid_Kp=18.134 pid_Ki=0.889 pid_Kd=92.484
pid_Ki: 0.889
pid_Kd: 92.484
min_temp: -100
max_temp: 310

[heater_bed]
heater_pin: PC7
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PB1
control: pid
pid_Kp: 325.10              # 自动调控PID值命令: PID_CALIBRATE HEATER=heater_bed TARGET=60
pid_Ki: 63.35
pid_Kd: 417.10
min_temp: 0
max_temp: 100

[input_shaper]
shaper_freq_x: 39.2
#   输入整形器的 X 轴频率(Hz)。通常这是希望被输入整形器消除的
#   X 轴共振频率。对于更复杂的整形器，例如2- 和 3-hump EI 输入
#   整形器，设置这个参数可能需要考虑其他特性。
#   默认值是0，禁用 X 轴输入整形。
shaper_freq_y: 23.0
#   输入整形器的 Y 轴频率(Hz)。通常这是希望被输入整形器消除的
#   Y 轴共振频率。对于更复杂的整形器，例如2- 和 3-hump EI 输入
#   整形器，设置这个参数可能需要考虑其他特性。
#   默认值是0，禁用 Y 轴输入整形。
#shaper_type: mzv
#   用于 X 和 Y 轴的输入整形器。支持的输入整形器有 zv、mzv、
#   zvd、ei、2hump_ei 和 3hump_ei。
#   默认为 mzv 输入整形器。
shaper_type_x: zv
shaper_type_y: mzv

[manual_stepper switch_stepper]
step_pin: PC13
dir_pin: PE6
enable_pin: !PF0
microsteps: 16
rotation_distance: 4
velocity: 20
#   设置步进电机的默认速度（单位：mm/s）。这个值会在 MANUAL_STEPPER 命令没有指定一个 SPEED 参数时会被使用。
#   默认为 5 mm/s。
accel: 100
#   设置步进电机的默认加速度（单位：mm/s^2）。设置加速度为零将导致没有加速度。这个值会在 MANUAL_STEPPER 命令没有指定 ACCEL 参数时会被使用。
#   默认为 0。
endstop_pin: !PG13

########################################
# TMC2208 configuration
########################################
# [tmc2208 stepper_x]
# uart_pin: PE5
# run_current: 0.500
# # stealthchop_threshold: 999999
# # interpolate:true
# # diag_pin: PE5         # 无限位复位脚,需要驱动支持(如2209),且对应轴限位脚应配置为 endstop_pin:tmc2209_stepper_x:virtual_endstop
# # diag_SGTHRS: 60       # 无限位复位阈值, 注:阈值越大，越容易触发，当归零时出现Endstop x still triggered after retract报错，需要把阈值调小。

# [tmc2208 stepper_y]
# uart_pin: PF1
# run_current: 0.500
# # stealthchop_threshold: 999999

# [tmc2208 stepper_z]
# uart_pin: PF10
# run_current: 0.500
# # stealthchop_threshold: 999999

[tmc2208 extruder]
uart_pin: PE1
run_current: 0.500
# stealthchop_threshold: 999999

[tmc2208 extruder1]
uart_pin: PE5
run_current: 0.500
# stealthchop_threshold: 999999

[tmc2208 manual_stepper switch_stepper]
uart_pin: PF1
run_current: 0.500
stealthchop_threshold: 999999

########################################
# Fan configuration
########################################
[fan]
pin: PD13   # fan1
# kick_start_time: 0.5
#pin: PB1 # fan2

[heater_fan fan1]
pin: PF9
heater: extruder1

#[heater_fan fan2]
#pin: PA2

########################################
# filament configuration
########################################
[filament_switch_sensor filament_sensor]
pause_on_runout: true
switch_pin: ^!PG10

########################################
# Probe configuration
########################################
# Before printing the PROBE_CALIBRATE command needs to be issued to run the probe calibration procedure, described at docs/Probe_Calibrate.md, to find the correct z_offset.
# [probe]
# pin: ^!PD6
# x_offset: 0.0
# y_offset: 0.0
# z_offset: 0.0
# speed: 12.0
# samples: 3

# ABL configuration
########################################
[bltouch]                               # enable for BLTouch
sensor_pin: ^PD6
control_pin: PA4
x_offset: 0
y_offset: 26
# z_offset: 0
speed: 3.0
lift_speed: 10
# pin_move_time: 1
# pin_up_reports_not_triggered: False
# pin_up_touch_mode_reports_triggered: False
# probe_with_touch_mode: True
# set_output_mode: OD

# 压力传感器 configuration
########################################
# [smart_effector]
# pin: ^!PD6
# control_pin: !PA4
# speed: 10                               # Z轴移动速度
# # probe_accel:                            # 探测时加速度
# recovery_time: 0.4                      # XY移动到位置后停下延时,防止未下降就触发
# samples: 3                              # 每个点探测次数,默认1次
# sample_retract_dist: 2.0                # 复数测试时,每次抬升的距离,默认2mm
# lift_speed: 3                           # 复数测试时,每次抬升的速度
# samples_result: average                 # 复数测试时,数据处理方式,有"average"取品均值或者"median"取中间值
# samples_tolerance: 0.2                  # 复数测试时,每个数据最大差值,超过会报错,默认0.1mm
# samples_tolerance_retries: 2            # 如果发生"samples_tolerance"报错,会尝试重新探测,"samples_tolerance_retries"定义了重试次数
# # activate_gcode:                         # 每个点探测下降前时发送gcode命令,但不要尝试发送"T"切换头
# # deactivate_gcode: G28XY                 # 每个点探测完成后探测完成后发送命令
# x_offset: 0
# y_offset: 0
# z_offset: 0.6

# [safe_z_home]                           # enable for BLTouch
# home_xy_position: 300, 300
# speed: 100
# z_hop: 10                               # Move up 10mm
# z_hop_speed: 5

[force_move]
enable_force_move: True

[homing_override]
axes: z
#set_position_z: 6
gcode:
  {% set fm_max       = printer.toolhead.axis_maximum %}
  {% set fm_home      = printer.toolhead.homed_axes %}
  {% set fm_xy_feed   = 150*60 %}
  {% set fm_z_feed    = 10*60 %}
  MANUAL_STEPPER STEPPER=switch_stepper ENABLE=1 MOVE=-20 SPEED=25 ACCEL=350 STOP_ON_ENDSTOP=1
  MANUAL_STEPPER STEPPER=switch_stepper SET_POSITION=0
  MANUAL_STEPPER STEPPER=switch_stepper ENABLE=1 MOVE=2 SPEED=25 ACCEL=350
  FORCE_MOVE STEPPER=stepper_z DISTANCE=10 VELOCITY=10 ACCEL=100
  # 查找字符'x'和'y'是否存在于fm_home字符串内, 不存在则先复位XY轴
  {% if not params.Z is defined or not 'x' in fm_home or not 'y' in fm_home %}
    G28 X Y
  {% endif %}
  G1 X{fm_max.x/2} Y{fm_max.y/2} F{fm_xy_feed}
  G28 Z0
  G1 Z10 F{fm_z_feed}
  # 判定当前活跃的挤出机
  {% if printer.toolhead.extruder == 'extruder1' %}
    T1
  {% endif %}
 

[bed_mesh]                              # enable for BLTouch
speed: 100
horizontal_move_z: 5                    # The Z coordinate the probe rises to prior to traveling between points.Default Value: 5
mesh_min: 30, 30                        # The first probed coordinate, nearest to the origin. This coordinate is relative to the probe's location.
mesh_max: 570, 570                      # The probed coordinate farthest farthest from the origin. 
                                        # This is not necessarily the last point probed, as the probing process occurs in a zig-zag fashion. 
                                        # As with mesh_min, this coordiante is relative to the probe's location.
probe_count: 9, 9
algorithm: bicubic                      # The algorithm used to interpolate the mesh. 
                                        # May belagrangeorbicubic.Lagrange interpolation is capped at 6 probed points as oscillation tends tooccur with a larger number of samples. 
                                        # Bicubic interpolation requires aminimum of 4 probed points along each axis, if less than 4 points arespecified then lagrange sampling is forced. 
                                        # Ifmesh_ppsis set to 0 thenthis value is ignored as no mesh interpolation is done.

########################################
# output configuration
########################################
#[output_pin PS_ON]
#pin: PG8
#value: 1
#shutdown_value: 0

########################################
# LED configuration
########################################
[led Status_led]
blue_pin: PB2
cycle_time: 1.000
initial_BLUE: 0.5

[neopixel LED]
pin: PD7

########################################
# input_shaper configuration
########################################
# [input_shaper] # 输入整形（input shaping ），共振测试时将禁用输入整形，因为在启用输入整形的情况下运行共振测试是无效的。
# shaper_freq_x: 30.4
# #   输入整形器的 X 轴频率(Hz)。通常这是希望被输入整形器消除的
# #   X 轴共振频率。对于更复杂的整形器，例如2- 和 3-hump EI 输入
# #   整形器，设置这个参数可能需要考虑其他特性。
# #   默认值是0，禁用 X 轴输入整形。
# shaper_freq_y: 38.6
# #   输入整形器的 Y 轴频率(Hz)。通常这是希望被输入整形器消除的
# #   Y 轴共振频率。对于更复杂的整形器，例如2- 和 3-hump EI 输入
# #   整形器，设置这个参数可能需要考虑其他特性。
# #   默认值是0，禁用 Y 轴输入整形。
# shaper_type: mzv
# #   用于 X 和 Y 轴的输入整形器。支持的输入整形器有 zv、mzv、
# #   zvd、ei、2hump_ei 和 3hump_ei。
# #   默认为 mzv 输入整形器。
# #shaper_type_x:
# #shaper_type_y:
# #   如果没有设置 shaper_type，可以用这两个参数来单独配置 X
# #   和 Y 轴的 输入整形器。
# #   该参数支持全部shaper_type 支持的选项。
# #damping_ratio_x: 0.1
# #damping_ratio_y: 0.1
# #   X 和 Y 轴的共振抑制比例，可以用来改善振动抑制效果。
# #   默认值是 0.1，适用于大多数打印机。
# #   大多数情况下不需要调整这个值。
# [adxl345]
# cs_pin: PG2
# #   传感器的 SPI 启用引脚。
# #   必须提供此参数。
# #spi_speed: 5000000
# #   与芯片通信时使用的SPI速度(hz)。
# #   默认为5000000。
# #spi_bus:
# spi_software_sclk_pin: PB10
# spi_software_mosi_pin: PG5
# spi_software_miso_pin: PG4
# #   参见"常见的SPI设置"章节，以了解对上述参数的描述。
# axes_map: x, y, z
# #   打印机的X、Y和Z轴的加速度计轴。
# #   如果加速度计的安装方向与打印机的方向不一致，
# #   可能需要修改该设定。
# #   例如，可以将其设置为"y, x, z"来交换X和Y轴。
# #   如果加速度计方向是相反的，可能需要反转相应轴
# #   （例如，"x, z, -y"）。
# #   默认是"x, y, z"。
# rate: 3200
# #   ADXL345的输出数据速率。ADXL345支持以下数据速率。
# #   3200、1600、800、400、200、100、50和25。请注意，不建议
# #   将此速率从默认的3200改为低于800的速率，这将大大影响
# #   共振测量的质量。
# [resonance_tester]  # 测试命令: TEST_RESONANCES AXIS=X(需要Linux安装numpy http://www.klipper3d.org/zh/Measuring_Resonances.html)
# probe_points: 100, 100, 20
# #   共振测试点的列表（每行一个X,Y,Z坐标点），至少指定一个点。请确保
# #   所有点在XY平面上都有足够容许打印头移动头移动的安全余量（约几厘米）。
# accel_chip: adxl345
# #   一个用于测量的加速度计芯片的名称。如果adxl345芯片定义时没有明确指定
# #   名称，这个参数可以直接引用 "accel_chip: adxl345"，否则必须提供一个明确
# #   的名称，例如 "accel_chip: adxl345 my_chip_name"。
# #   必须被提供这个参数或下面的两个参数。
# #accel_chip_x:
# #accel_chip_y:
# #   用于测量每个轴的加速计芯片的名称。在平移热床的打印机上可能很有用，
# #   如果两个单独的加速度计分别被安装在打印床（用于Y轴）和工具头（X轴）上。
# #   这些参数的格式与 “accel_chip” 参数相同。
# #   必须提供“accel_chip”或这两个参数。
# #max_smoothing:
# #   在自动校准整形(使用'SHAPER_CALIBRATE' 命令)的过程中允许每个轴的最大输
# #   入整形器平滑度。
# #   默认不指定最大的平滑度。
# #   请参考共振校准指南以了解有关使用此功能的更多细节。
# #min_freq: 5
# #   测试谐振的最小频率。默认为5Hz。
# #max_freq: 133.33
# #   测试谐振的最大频率。默认为133.33 Hz。
# #accel_per_hz: 75
# #   这个参数用于决定测试一个特定的频率的加速度： accel = accel_per_hz * freq。
# #   数值越大加速度越高，振荡的能量就越大。如果打印机上的共振太强，可以
# #   设置为比默认值更低的值。然而，较低的值会使高频共振的测量不那么精确。
# #   默认为75mm/s。
# #hz_per_sec: 1
# #   决定测试的速度。当测试所有频率在范围[min_freq, max_freq]内时，每秒钟
# #   频率都会增加 hz_per_sec。更小的数值会使测试变慢，更大的数值会降低测
# #   试的精度。
# #   默认值是1.0（Hz/sec == sec^-2）。


########################################
# switch nozzle Gcode
########################################
[gcode_macro T0]
gcode:
  # {% if printer['extruder1'].temperature > 170 %}
  #   G92 E0
  #   G1 E-15
  #   G92 E0
  # {% endif %}
  # MANUAL_STEPPER STEPPER=switch_stepper ENABLE=1 MOVE=1 SPEED=25 ACCEL=350    # Lift secondary extruder SET_POSITION=0
  # SET_GCODE_OFFSET Z=0 MOVE=1 MOVE_SPEED=10                # Adjust z-height
  # SET_GCODE_OFFSET X=0 MOVE=1 MOVE_SPEED=150                       # Clear X offset
  # ACTIVATE_EXTRUDER EXTRUDER=extruder
  # {% if printer['extruder'].temperature > 170 %}
  #   G1 E15
  #   G92 E0
  # {% endif %}
  {% set T0_xy_feed   = 150*60 %}
  {% set T0_z_feed    = 10*60 %}
  {% set T0_pos       = printer.toolhead.position %}
  {% set T0_z_offset  = 1.4 %}
  {% if printer['extruder1'].temperature > 170 %}
    G92 E0
    G1 E-15
    G92 E0
  {% endif %}
  G1 Z{T0_pos.z+5} F{T0_z_feed}
  MANUAL_STEPPER STEPPER=switch_stepper ENABLE=1 MOVE=2 SPEED=25 ACCEL=350    # Lift secondary extruder SET_POSITION=0
  SET_GCODE_OFFSET X=0 Y=0 Z=0                # Adjust z-height
  ACTIVATE_EXTRUDER EXTRUDER=extruder
  {% if printer['extruder'].temperature > 170 %}
    G1 E15
    G92 E0
  {% endif %}
  G1 Z{T0_pos.z-T0_z_offset} F{T0_z_feed}
  #add by Sampson
  SAVE_VARIABLE VARIABLE=currentextruder VALUE='"extruder"'
[gcode_macro T1]
gcode:
  # {% if printer['extruder'].temperature > 170 %}
  #   G92 E0
  #   G1 E-15
  #   G92 E0
  # {% endif %}
  # SET_GCODE_OFFSET Z=1.70 MOVE=1 MOVE_SPEED=10             # Adjust z-height
  # MANUAL_STEPPER STEPPER=switch_stepper ENABLE=1 MOVE=10 SPEED=25 ACCEL=350    # Position second extruder
  # SET_GCODE_OFFSET X=-62 MOVE=1 MOVE_SPEED=150                       # Account for different X offset
  # ACTIVATE_EXTRUDER EXTRUDER=extruder1
  # {% if printer['extruder1'].temperature > 170 %}
  #   G1 E15
  #   G92 E0
  # {% endif %}
  {% set T1_xy_feed   = 150*60 %}
  {% set T1_z_feed    = 10*60 %}
  {% set T1_pos       = printer.toolhead.position %}
  {% set T1_z_offset  = 1.4 %}
  {% if printer['extruder'].temperature > 170 %}
    G92 E0
    G1 E-15
    G92 E0
  {% endif %}
  G1 Z{T1_pos.z+5} F{T1_z_feed}
  MANUAL_STEPPER STEPPER=switch_stepper ENABLE=1 MOVE=10 SPEED=25 ACCEL=350    # Position second extruder
  SET_GCODE_OFFSET X=-61.8 Y=-0.3 Z={T1_z_offset}              # Adjust z-height
  ACTIVATE_EXTRUDER EXTRUDER=extruder1
  {% if printer['extruder1'].temperature > 170 %}
    G1 E15
    G92 E0
  {% endif %}
  G1 Z{T1_pos.z} F{T1_z_feed}
  #add by Sampson
  SAVE_VARIABLE VARIABLE=currentextruder VALUE='"extruder1"'
# 定义 shell_cmd 命令 【执行关机操作】
#[gcode_shell_command poweroff_host]
#command: sudo shutdown now

#[gcode_macro PowerOff_Host]
#gcode:
 #   RUN_SHELL_COMMAND CMD=poweroff_host
[save_variables]
filename: ~/printer_data/klipper.conf

[gcode_macro SAVE_PRINT_STATS]
gcode:
  {% set sv = printer.save_variables.variables %}
  
  #SAVE_VARIABLE VARIABLE=currentextruder VALUE={printer.toolhead.extruder}
  SAVE_VARIABLE VARIABLE=curextrudertarget VALUE={printer[printer.toolhead.extruder].target}
  #{action_respond_info("DWGJ-ON-ON-ON!")}
  {% if printer.virtual_sdcard.is_active %}
    #G1 Z{printer.gcode_move.gcode_position.z+5} F300
    SAVE_VARIABLE VARIABLE=positionz VALUE={printer.gcode_move.gcode_position.z}
    SAVE_VARIABLE VARIABLE=positione VALUE={printer.toolhead.position.e}
    SAVE_VARIABLE VARIABLE=filepath VALUE='"{printer.print_stats.filename}"'
    SAVE_VARIABLE VARIABLE=fileposition VALUE={printer.virtual_sdcard.file_position}
    SAVE_VARIABLE VARIABLE=filesize VALUE={printer.virtual_sdcard.file_size}
    #{% if sv.resumeflag == 1 %}
      #SAVE_VARIABLE VARIABLE=filamentused VALUE={printer.print_stats.filament_used+sv.filamentused}
    #{% else %}
      SAVE_VARIABLE VARIABLE=filamentused VALUE={printer.print_stats.filament_used}
    #{% endif %}
	#SAVE_VARIABLE VARIABLE=printinfo VALUE='"{printer.print_stats.message}"'
    SAVE_VARIABLE VARIABLE=resumeflag VALUE=1
    M118 Saving print stats successfully.
  {% endif %}

[gcode_macro POWEROFF_RESUME]
gcode:
  {% set svv = printer.save_variables.variables %}
  {% if svv.resumeflag == 1 %}
    M118 Power loss recovery, resuming print.
    ACTIVATE_EXTRUDER extruder={svv.currentextruder}
    G28 X Y
	SET_STEPPER_ENABLE STEPPER=stepper_x enable=0
	SET_STEPPER_ENABLE STEPPER=stepper_y enable=0
	SET_STEPPER_ENABLE STEPPER=stepper_z enable=0
	SET_STEPPER_ENABLE STEPPER=extruder enable=0
	SET_STEPPER_ENABLE STEPPER=extruder1 enable=0

	SET_KINEMATIC_POSITION Z={svv.positionz}
    #G1 Z{svv.positionz-5}
    M109 S{svv.curextrudertarget}
    M106 S125
    M82
    G90
    G92 E{svv.filamentused-10}
    #G1 E{svv.positione-10}
    M23 {svv.filepath}
    M26 S{svv.fileposition}
    M24
    SAVE_VARIABLE VARIABLE=resumeflag VALUE=0
    M118 Power loss recovery, resuming print.
  {% endif %}

#开机后执行断电续打命令
#[delayed_gcode START_POWEROFF_RESUME]
#initial_duration:3.0
#gcode:
#  POWEROFF_RESUME

#打开M118命令，打印字符串
[respond]
default_type: echo

[gcode_macro TEST_GCODE]
gcode:
  {% set p0=printer.gcode_move.position.z %}
  {% set p1=printer.gcode_move.gcode_position.z %}
  M118 position:{p0}, gcode_position:{p1}

[gcode_macro REMOVE_POWEROFF_RESUME]
gcode:
    SAVE_VARIABLE VARIABLE=resumeflag VALUE=0

[gcode_button POWER_LOSS]
pin: !PC6
press_gcode:
  #M118 Power loss, saving print states.
  SAVE_PRINT_STATS
  G28 X Y

[gcode_macro AUTO_SHUTDOWN]
gcode:
    SAVE_VARIABLE VARIABLE=autoshutdown VALUE=1

[gcode_macro AUTO_SHUTDOWN_OFF]
gcode:
    SAVE_VARIABLE VARIABLE=autoshutdown VALUE=0


