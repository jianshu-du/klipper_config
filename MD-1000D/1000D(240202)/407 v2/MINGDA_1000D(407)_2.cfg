# other config
#--------------------------------------------------------------------------------
[virtual_sdcard]
path: ~/printer_data/gcodes
on_error_gcode: CANCEL_PRINT

[force_move]
enable_force_move: True

[save_variables]
filename: ~/printer_data/config/klipper.conf

[respond]
default_type: echo

[gcode_macro MD_1000D]
gcode:


# Mcu & Printer
#--------------------------------------------------------------------------------
[mcu]
serial: /tmp/klipper_host_mcu

[mcu MAINB]
canbus_uuid: 4d4400000301

[mcu HEADB]
canbus_uuid: 4d4400000302

[printer]
kinematics: cartesian
max_velocity: 500
max_accel: 5000
max_z_velocity: 10
max_z_accel: 100


# stepper
#--------------------------------------------------------------------------------
[stepper_x]
dir_pin: MAINB:PC7
step_pin: !MAINB:PC6
enable_pin: MAINB:PC8
microsteps: 16
rotation_distance: 66
endstop_pin: !HEADB:PC13
position_endstop: -69.5
position_min: -69.5
position_max: 1001
homing_speed: 80

[stepper_y]
dir_pin: MAINB:PD14
step_pin: MAINB:PD13
enable_pin: !MAINB:PD15
microsteps: 16
rotation_distance: 33
endstop_pin: !MAINB:PE4
position_endstop: -7.5
position_min: -7.5
position_max: 1001
homing_speed: 80

[stepper_z]
dir_pin: !MAINB:PD11
step_pin: !MAINB:PD10
enable_pin: MAINB:PD12
microsteps: 16
rotation_distance: 2.5
#endstop_pin: probe:z_virtual_endstop
endstop_pin: !MAINB:PE5
# position_endstop: 0
position_min: -10
position_max: 1001
homing_speed: 5

[stepper_z1]
dir_pin: MAINB:PD8
step_pin: MAINB:PB15
enable_pin: !MAINB:PD9
microsteps: 16
rotation_distance: 2.5
endstop_pin: !MAINB:PE6

[manual_stepper switch_stepper]
step_pin: HEADB:PA2
dir_pin: HEADB:PA1
enable_pin: !HEADB:PC15
microsteps: 16
rotation_distance: 2
velocity: 5
accel: 100
endstop_pin: HEADB:PC6


# extruder & heater
#--------------------------------------------------------------------------------
[extruder]
dir_pin: HEADB:PC0
step_pin: HEADB:PC1
enable_pin:!HEADB:PC3
microsteps: 16
rotation_distance: 8
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_cross_section: 2.5
max_extrude_only_distance: 600
heater_pin: HEADB:PB4
sensor_type: PT1000
sensor_pin: HEADB:PC4
# control: pid
# pid_Kp: 22.517
# pid_Ki: 1.925
# pid_Kd: 65.863
min_temp: 0
max_temp: 354

[extruder1]
dir_pin: !HEADB:PB0
step_pin: HEADB:PB1
enable_pin:!HEADB:PB10
microsteps: 16
rotation_distance: 8
nozzle_diameter: 0.400
filament_diameter: 1.750
max_extrude_cross_section: 2.5
max_extrude_only_distance: 600
heater_pin: HEADB:PB3
sensor_type: PT1000
sensor_pin: HEADB:PC5
# control: pid
# pid_Kp: 22.517
# pid_Ki: 1.925
# pid_Kd: 65.863
min_temp: 0
max_temp: 354

[heater_bed]
heater_pin: MAINB:PE3
sensor_type: EPCOS 100K B57560G104F
sensor_pin: MAINB:PA2
# control: pid
# pid_Kp: 325.10
# pid_Ki: 63.35
# pid_Kd: 417.10
min_temp: 0
max_temp: 114


# stepper uart
#--------------------------------------------------------------------------------
[tmc2208 manual_stepper switch_stepper]
uart_pin:HEADB:PA3
run_current: 0.300
sense_resistor: 0.100
stealthchop_threshold: 999999

[tmc2208 extruder]
uart_pin: HEADB:PC2
run_current: 0.500
sense_resistor: 0.100
# stealthchop_threshold: 0.2

[tmc2208 extruder1]
uart_pin: HEADB:PB2
run_current: 0.500
sense_resistor: 0.100
# stealthchop_threshold: 0.2


# fan
#--------------------------------------------------------------------------------
[fan_generic Case_Fan]
pin: MAINB:PA3
shutdown_speed: 0
off_below: 0.3

[temperature_fan CPU_Temperature]
pin: MAINB:PA5
# shutdown_speed: 0
sensor_type: temperature_host
sensor_path: /sys/class/thermal/thermal_zone0/temp
min_temp: 0
max_temp: 100
control: watermark
# target_temp: 40.0

# [fan_generic Auxiliary_Cooling_Fan]
# pin: MAINB:PB0
# shutdown_speed: 0
# off_below: 0.3

[fan_generic Auxiliary_Cooling_Fan]
pin: MAINB:PB14
shutdown_speed: 0
off_below: 0.3

#FAN0
[heater_fan Hotend_Fan0]
pin: !HEADB:PA15
tachometer_pin: ^HEADB:PC10
shutdown_speed: 0
heater: extruder
heater_temp: 50.0

#FAN2
[heater_fan Hotend_Fan1]
pin: !HEADB:PA9
tachometer_pin: ^HEADB:PA10
shutdown_speed: 0
heater: extruder1
heater_temp: 50.0

#FAN1
[fan_generic Nozzle_Fan0]
pin: !HEADB:PC12
tachometer_pin: ^HEADB:PC11
shutdown_speed: 0
cycle_time: 0.001
off_below: 0.3

#FAN3
[fan_generic Nozzle_Fan1]
pin: !HEADB:PC9
tachometer_pin: ^HEADB:PA8
shutdown_speed: 0
cycle_time: 0.001
off_below: 0.3


# bltouch or probe
#--------------------------------------------------------------------------------
# [bltouch]                               # enable for BLTouch
# sensor_pin: ^HEADB:PB6  # z_min
# control_pin: HEADB:PB7  # servo_pin
# x_offset: 0
# y_offset: 34
# z_offset: 0
# speed: 3.0
# lift_speed: 10

# [probe]
# pin: ^!HEADB:PB6
# x_offset: 0
# y_offset: 34
# #z_offset: 1.8
# speed: 3
# # samples: 1
# # sample_retract_dist: 0.5
# # samples_result: median
# samples_tolerance: 0.8

# [bed_mesh]                              # enable for BLTouch
# speed: 100
# horizontal_move_z: 5                    # The Z coordinate the probe rises to prior to traveling between points.Default Value: 5
# mesh_min: 5, 30                         # The first probed coordinate, nearest to the origin. This coordinate is relative to the pro>
# mesh_max: 995, 995                      # The probed coordinate farthest farthest from the origin.
#                                         # This is not necessarily the last point probed, as the probing process occurs in a zig-zag >
#                                         # As with mesh_min, this coordiante is relative to the probe's location.
# probe_count: 15, 15
# algorithm: bicubic                      # The algorithm used to interpolate the mesh.
#                                         # May belagrangeorbicubic.Lagrange interpolation is capped at 6 probed points as oscillation>
#                                         # Bicubic interpolation requires aminimum of 4 probed points along each axis, if less than 4>
#                                         # Ifmesh_ppsis set to 0 thenthis value is ignored as no mesh interpolation is done.

[md_dist]
canbus_uuid: 4d4400000004
#   Path to the serial port for the idm device. Typically has the form
#   /dev/serial/by-id/usb-idm_idm_...
speed: 40.
#   Z probing dive speed.
lift_speed: 5.
#   Z probing lift speed.
backlash_comp: 0.5
#   Backlash compensation distance for removing Z backlash before measuring
#   the sensor response.
x_offset: 36.
#   X offset of idm from the nozzle.
y_offset: 24.9
#   Y offset of idm from the nozzle.
trigger_distance: 2.
#   idm trigger distance for homing.
trigger_dive_threshold: 1.5
#   Threshold for range vs dive mode probing. Beyond `trigger_distance +
#   trigger_dive_threshold` a dive will be used.
trigger_hysteresis: 0.006
#   Hysteresis on trigger threshold for untriggering, as a percentage of the
#   trigger threshold.
cal_nozzle_z: 0.1
#   Expected nozzle offset after completing manual Z offset calibration.
cal_floor: 0.1
#   Minimum z bound on sensor response measurement.
cal_ceil:5.
#   Maximum z bound on sensor response measurement.
cal_speed: 1.0
#   Speed while measuring response curve.
cal_move_speed: 10.
#   Speed while moving to position for response curve measurement.
default_model_name: default
#   Name of default idm model to load.
mesh_main_direction: x
#   Primary travel direction during mesh measurement.
#mesh_overscan: -1
#   Distance to use for direction changes at mesh line ends. Omit this setting
#   and a default will be calculated from line spacing and available travel.
mesh_cluster_size: 1
#   Radius of mesh grid point clusters.
mesh_runs: 2
#   Number of passes to make during mesh scan.
end_park_pos: 0, 0
first_move_axis: y

[bed_mesh]                              # enable for BLTouch
speed: 250
horizontal_move_z: 5                    # The Z coordinate the probe rises to prior to traveling between points.Default Value: 5
mesh_min: 30, 70                        # The first probed coordinate, nearest to the origin. This coordinate is relative to the pro>
mesh_max: 990, 990                      # The probed coordinate farthest farthest from the origin.
                                        # This is not necessarily the last point probed, as the probing process occurs in a zig-zag >
                                        # As with mesh_min, this coordiante is relative to the probe's location.
probe_count: 25, 25
algorithm: bicubic                      # The algorithm used to interpolate the mesh.
                                        # May belagrangeorbicubic.Lagrange interpolation is capped at 6 probed points as oscillation>
                                        # Bicubic interpolation requires aminimum of 4 probed points along each axis, if less than 4>
                                        # Ifmesh_ppsis set to 0 thenthis value is ignored as no mesh interpolation is done.


# input_shaper
#--------------------------------------------------------------------------------
[lis2dw Hotend_0]
cs_pin: HEADB:PA4
#spi_speed: 5000000
#spi_bus:
spi_software_sclk_pin: HEADB:PA5
spi_software_mosi_pin: HEADB:PA7
spi_software_miso_pin: HEADB:PA6
axes_map: -x, z, y
#rate: 3200

# [input_shaper]
# shaper_freq_x: 39.2
# shaper_freq_y: 23.0
# shaper_type_x: zv
# shaper_type_y: mzv

[resonance_tester]
probe_points: 500, 500, 20
accel_chip: lis2dw Hotend_0


# led
#--------------------------------------------------------------------------------
[led _Main_Board_Status_Led]
blue_pin: !MAINB:PB11
cycle_time: 1.000
initial_BLUE: 0.5

[led _Head_Board_Status_Led]
blue_pin: !HEADB:PB14
cycle_time: 1.000
initial_BLUE: 0.5

[led Lighting_Lamp]
white_pin: MAINB:PB1
cycle_time: 0.01
initial_WHITE: 1


# filament
#--------------------------------------------------------------------------------
[filament_switch_sensor Filament_Sensor0]
switch_pin: HEADB:PC14
pause_delay: 2.0

[filament_switch_sensor Filament_Sensor1]
switch_pin: HEADB:PC8
pause_delay: 2.0


# pin
#--------------------------------------------------------------------------------
[output_pin _LED_R]
pin: MAINB:PE7    # AL_RED
value: 0
shutdown_value: 1
[output_pin _LED_Y]
pin: MAINB:PE8    # AL_YELLOW
value: 0
shutdown_value: 0
[output_pin _LED_G]
pin: MAINB:PE9    # AL_GREEN
value: 1
shutdown_value: 0
[output_pin _LED_B]
pin: MAINB:PE10   # AL_BEEP
value: 0
shutdown_value: 0

[output_pin Filament_box_power]
pin: MAINB:PB0


# gcode button
#--------------------------------------------------------------------------------
# left_button
[gcode_button Load_Button0]
pin: ^!HEADB:PA0
press_gcode:
  {% if printer['extruder'].temperature > 170 %}
    {% set current_head=printer.toolhead.extruder %}
    {% if current_head=='extruder1' %}
      ACTIVATE_EXTRUDER EXTRUDER='extruder'
    {% endif %}
    G91
    G1 E+10 F300
    G90
    {% if current_head=='extruder1' %}
      ACTIVATE_EXTRUDER EXTRUDER={current_head}
    {% endif %}
  {% else %}
    M118 The temperature of T0 is too low
  {% endif %}
release_gcode:

# right button
[gcode_button Load_Button1]
pin: ^!HEADB:PC7
press_gcode:
  {% if printer['extruder1'].temperature > 170 %}
    {% set current_head=printer.toolhead.extruder %}
    {% if current_head=='extruder' %}
      ACTIVATE_EXTRUDER EXTRUDER='extruder1'
    {% endif %}
    G91
    G1 E+10 F300
    G90
    {% if current_head=='extruder' %}
      ACTIVATE_EXTRUDER EXTRUDER={current_head}
    {% endif %}
  {% else %}
    M118 The temperature of T1 is too low
  {% endif %}
release_gcode:

# power loss trigger
[gcode_button POWER_LOSS]
pin: ^!MAINB:PB10
press_gcode:
  M118 Power loss, saving print states.
  {% if printer.virtual_sdcard.is_active %}
    SAVE_PRINT_STATS
    TURN_OFF_HEATERS
    SET_LED LED=Lighting_Lamp WHITE=0.0 SYNC=0 TRANSMIT=1
    SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=0
    SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=0
    SET_STEPPER_ENABLE STEPPER=stepper_z ENABLE=0
    _CLOSE_ALL_FANS
    # G1 Y0 F12000
    _SHUT_DOWN
  {% else %}
    _SHUT_DOWN
  {% endif %}

# zoffset_button
[gcode_button zoffset_button]
pin: ^!MAINB:PA9
press_gcode:
  M118 zoffset_button press

# motor_error_button
[gcode_button motor_error_button]
pin: ^!MAINB:PA8
press_gcode:
  RESPOND TYPE=error MSG="The motor is wrong."
  {action_emergency_stop("\"Motor error!\"")}

[gcode_button door_open_detection]
pin: ^!MAINB:PE2
press_gcode:
  M118 The door is open.
release_gcode:
  M118 The door is closed.


# idle_timeout
#--------------------------------------------------------------------------------
[idle_timeout]
gcode:
  M118 idle timeout
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=0
  SET_HEATER_TEMPERATURE HEATER=extruder1 TARGET=0
timeout: 600


# verify
#--------------------------------------------------------------------------------
[verify_heater heater_bed]
max_error: 180
check_gain_time: 120
# hysteresis: 5
heating_gain: 1


# homing override
#--------------------------------------------------------------------------------
# [safe_z_home]
# home_xy_position: 500,500
# #   A X, Y coordinate (e.g. 100, 100) where the Z homing should be
# #   performed. This parameter must be provided.
# speed: 150.0
# #   Speed at which the toolhead is moved to the safe Z home
# #   coordinate. The default is 50 mm/s
# z_hop: 5

[gcode_macro FORCE_MOVE]
rename_existing: FORCE_MOVE_BACE
gcode:
  # FORCE_MOVE STEPPER=<config_name> DISTANCE=<value> VELOCITY=<value> [ACCEL=<value>]
  {% set STEPPER = params.STEPPER|default(none) %}
  {% set DISTANCE = params.DISTANCE|default(none) %}
  {% set VELOCITY = params.VELOCITY|default(none) %}
  {% set ACCEL = params.ACCEL|default(none) %}
  
  {% if STEPPER is none %}
    M118 Error on FORCE_MOVE: missing "STEPPER"
  {% elif DISTANCE is none %}
    M118 Error on FORCE_MOVE: missing "DISTANCE"
  {% elif VELOCITY is none %}
    M118 Error on FORCE_MOVE: missing "VELOCITY"
  {% elif ACCEL is none %}
    M118 Error on FORCE_MOVE: missing "ACCEL"
  {% else %}
    SET_KINEMATIC_POSITION_Z Z=0.0
    G1 Z{DISTANCE} F{VELOCITY*60}
    M400
    M18 Z
  {% endif %}

[homing_override]
gcode:
  {% set ho_max       = printer.toolhead.axis_maximum %}
  {% set ho_home      = printer.toolhead.homed_axes %}
  {% set ho_act_e     = printer.toolhead.extruder %}
  {% set ho_xy_feed   = 130*60 %}
  {% set ho_z_feed    = 10*60 %}
  {% set ho_wait_time = 1500 %}
  
  {% if not 'z' in ho_home %}
    SET_STEPPER_ENABLE STEPPER=stepper_z ENABLE=1
    SET_STEPPER_ENABLE STEPPER=stepper_z1 ENABLE=1
    G4 P{ho_wait_time}
    FORCE_MOVE STEPPER=stepper_z DISTANCE=5 VELOCITY=2 ACCEL=100
  {% elif printer.gcode_move.gcode_position.z<5 %}
    G1 Z5 F300
  {% endif %}
  {% if params.X is defined or params.Y is defined and not params.Z is defined %}
    {% set axis = "" %}
    {% if params.X is defined %}
      SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
      {% set axis = axis~" X" %}
    {% endif %}
    {% if params.Y is defined %}
      SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
      {% set axis = axis~" Y" %}
    {% endif %}
    # {% if params.Z is defined %}
    #   SET_STEPPER_ENABLE STEPPER=stepper_z ENABLE=1
    #   SET_STEPPER_ENABLE STEPPER=stepper_z1 ENABLE=1
    #   {% set axis.format(" Z") %}
    # {% endif %}
    G4 P{ho_wait_time}
    G28{axis}
  {% else %}
    {% if printer.bed_mesh is defined %}
      {% set ho_bed_mesh=printer.bed_mesh.profile_name %}
      BED_MESH_CLEAR
    {% endif %}
    {% if ho_act_e == 'extruder1' %}
      T0 R0
    {% endif %}
    MANUAL_STEPPER STEPPER=switch_stepper ENABLE=1 MOVE=-20 SPEED=15 ACCEL=350 STOP_ON_ENDSTOP=1
    MANUAL_STEPPER STEPPER=switch_stepper SET_POSITION=0
    MANUAL_STEPPER STEPPER=switch_stepper ENABLE=1 MOVE=2 SPEED=15 ACCEL=350
    {% if not params.Z is defined or not 'x' in ho_home or not 'y' in ho_home %}
      SET_STEPPER_ENABLE STEPPER=stepper_x ENABLE=1
      SET_STEPPER_ENABLE STEPPER=stepper_y ENABLE=1
      SET_STEPPER_ENABLE STEPPER=stepper_z ENABLE=1
      SET_STEPPER_ENABLE STEPPER=stepper_z1 ENABLE=1
      G4 P{ho_wait_time}
      G28 X Y
    {% endif %}
    {% if printer.bed_mesh is defined and ho_bed_mesh|length %}
      G1 F{ho_xy_feed} X{(ho_max.x-1)/2} Y{(ho_max.y-1)/2}
      BED_MESH_PROFILE LOAD={ho_bed_mesh}
    {% else %}
      G1 F{ho_xy_feed} X{(ho_max.x-1)/2} Y{(ho_max.y-1)/2}
    {% endif %}
    G28 Z
    G1 F{ho_z_feed} Z10
    {% if ho_act_e == 'extruder1' %}
      T1 R0
    {% endif %}
  {% endif %}


# macro gcode
#--------------------------------------------------------------------------------
[gcode_macro T0]
gcode:
  {% set svv = printer.save_variables.variables %}
  {% set T0_xy_feed   = 150*60 %}
  {% set T0_z_feed    = 10*60 %}
  {% set T0_z_offset  = 0.0 %}
  {% set T0_e_offset  = svv.e1_eoffset %}
  {% set T0_home      = printer.toolhead.homed_axes %}
  M400
  {% set T0_pos_z     = printer.gcode_move.gcode_position.z %}
  {% if params.R is defined %}
    SET_GCODE_OFFSET X=0 Y=0 Z={T0_z_offset}
    ACTIVATE_EXTRUDER EXTRUDER=extruder
  {% elif printer.toolhead.extruder=='extruder1' %}
    {% if 'xyz' in T0_home %}
      G1 F{T0_z_feed} Z{T0_pos_z+5}
      {% if printer['extruder1'].temperature>170 and T0_e_offset>0.00001 %}
		M400
        G92 E0
        G1 F{T0_z_feed} E-{T0_e_offset}
        G92 E0
      {% endif %}
      MANUAL_STEPPER STEPPER=switch_stepper ENABLE=1 MOVE=2 SPEED=15 ACCEL=350    # Lift secondary extruder SET_POSITION=0
      SET_GCODE_OFFSET X=0 Y=0 Z={T0_z_offset}                # Adjust z-height
      ACTIVATE_EXTRUDER EXTRUDER=extruder
      {% if printer['extruder'].temperature>170 and T0_e_offset>0.00001 %}
		M400
        G92 E0
        G1 F{T0_z_feed} E{T0_e_offset}
        G92 E0
      {% else %}
        G92 E0
      {% endif %}
	  M400
      G1 F{T0_z_feed} Z{T0_pos_z}
    {% else %}
      ACTIVATE_EXTRUDER EXTRUDER=extruder
    {% endif %}
  {% else %}
    M118 The current toolheade is T0
    ACTIVATE_EXTRUDER EXTRUDER=extruder
  {% endif %}
  SAVE_VARIABLE VARIABLE=currentextruder VALUE='"extruder"'

[gcode_macro T1]
gcode:
  {% set svv = printer.save_variables.variables %}
  {% set T1_xy_feed   = 150*60 %}
  {% set T1_z_feed    = 10*60 %}
  {% set T1_x_offset  = svv.e1_xoffset %}
  {% set T1_y_offset  = svv.e1_yoffset %}
  {% set T1_z_offset  = svv.e1_zoffset %}
  {% set T1_e_offset  = svv.e1_eoffset %}
  {% set T1_home      = printer.toolhead.homed_axes %}
  {% set T1_park_x    = printer.toolhead.axis_minimum.x %}
  M400
  {% set T1_pos_z     = printer.gcode_move.gcode_position.z %}
  {% if params.R is defined %}
    MANUAL_STEPPER STEPPER=switch_stepper ENABLE=1 MOVE=16.3 SPEED=15 ACCEL=350    # Position second extruder
    SET_GCODE_OFFSET X={T1_x_offset} Y={T1_y_offset} Z={T1_z_offset}              # Adjust z-height
    ACTIVATE_EXTRUDER EXTRUDER=extruder1
  {% elif printer.toolhead.extruder=='extruder' %}
    {% if 'xyz' in T1_home %}
      G1 F{T1_z_feed} Z{T1_pos_z+5}
      {% if printer['extruder'].temperature>170 and T1_e_offset>0.00001 %}
		M400
        G92 E0
        G1 F{T1_z_feed} E-{T1_e_offset}
        G92 E0
      {% endif %}
      MANUAL_STEPPER STEPPER=switch_stepper ENABLE=1 MOVE=16.3 SPEED=15 ACCEL=350    # Position second extruder
      SET_GCODE_OFFSET X={T1_x_offset} Y={T1_y_offset} Z={T1_z_offset}              # Adjust z-height
      ACTIVATE_EXTRUDER EXTRUDER=extruder1
      {% if printer['extruder1'].temperature>170 and T1_e_offset>0.00001 %}
		M400
        G92 E0
        G1 F{T1_z_feed} E{T1_e_offset}
        G92 E0
      {% else %}
        G92 E0
      {% endif %}
	  M400
      G1 F{T1_z_feed} Z{T1_pos_z}
    {% else %}
      ACTIVATE_EXTRUDER EXTRUDER=extruder1
    {% endif %}
  {% else %}
    M118 The current toolheade is T1
    ACTIVATE_EXTRUDER EXTRUDER=extruder1
  {% endif %}
  SAVE_VARIABLE VARIABLE=currentextruder VALUE='"extruder1"'

[gcode_macro _CLIENT_VARIABLE]
variable_use_custom_pos   : True  ; use custom park coordinates for x,y [True/False]
variable_custom_park_x    : 0.0   ; custom x position; value must be within your defined min and max of X
variable_custom_park_y    : 0.0   ; custom y position; value must be within your defined min and max of Y
variable_custom_park_dz   : 2.0   ; custom dz value; the value in mm to lift the nozzle when move to park position
variable_retract          : 0.0   ; the value to retract while PAUSE
variable_cancel_retract   : 0.0   ; the value to retract while CANCEL_PRINT
variable_speed_retract    : 35.0  ; retract speed in mm/s
variable_unretract        : 1.0   ; the value to unretract while RESUME
variable_speed_unretract  : 10.0  ; unretract speed in mm/s
variable_speed_hop        : 10.0  ; z move speed in mm/s
variable_speed_move       : 100.0 ; move speed in mm/s
variable_park_at_cancel   : True  ; allow to move the toolhead to park while execute CANCEL_PRINT [True/False]
variable_park_at_cancel_x : 0.0   ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
variable_park_at_cancel_y : 995.0 ; different park position during CANCEL_PRINT [None/Position as Float]; park_at_cancel must be True
# !!! Caution [firmware_retraction] must be defined in the printer.cfg if you set use_fw_retract: True !!!
variable_use_fw_retract   : False ; use fw_retraction instead of the manual version [True/False]
variable_idle_timeout     : 0     ; time in sec until idle_timeout kicks in. Value 0 means that no value will be set or restored
gcode:

[gcode_macro SET_FILAMENT_BOX_POWER]
gcode:
  {% set svv = printer.save_variables.variables %}
  {% if params.S is defined %}
    {% set power = params.S|default(1)|int %}
    {% if svv.filament_box_power is none or svv.filament_box_power != power %}
      SAVE_VARIABLE VARIABLE=filament_box_power VALUE={power}
    {% endif %}
    SET_PIN PIN=Filament_box_power VALUE={power}
    # M118 SET_FB_P {power}
  {% endif %}

[gcode_macro _test2]
gcode:
  # {action_emergency_stop("\"Motor error!\"")}

