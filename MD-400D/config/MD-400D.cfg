########################################
# MCU configuration
########################################
[mcu]
serial: /dev/serial/by-id/usb-Klipper_stm32f407xx_29001E000C47313436363437-if00
restart_method: command


########################################
# Printer configuration
########################################
[printer]
kinematics: cartesian   # 机器类型分别为cartesian（一般机型）、corexy（corexy机型）、delta（三角洲机型），根据自己的机器进行设置。
max_velocity: 500
max_accel: 7000
max_z_velocity: 15
max_z_accel: 100


########################################
# Strpper & Heat configuration
########################################
[stepper_x]
dir_pin: PE6
step_pin: PC13               # 步进引脚. 如果需要上拉需加上: ^, 下拉加: ~
enable_pin: !PF0
microsteps: 16
rotation_distance: 40       # 电机转动参数需要配置“旋转距离”，rotation_distance = ((360°/1.8°) * microsteps) / 80 {旋转距离 = （圆周360°/步距角）*细分/每MM脉冲值}
endstop_pin: !H0:gpio6          # 若要配置为无限位复位,此处应配置为 tmc2209_stepper_x:virtual_endstop 注:tmc2209是下方支持无限位复位的驱动名
position_endstop: -62         # 限位脚所在位置,也是复位方向,0最小位置方向, position_max最大位置方向
position_min: -62
position_max: 400           # 轴最大位置
homing_speed: 100
[tmc2208 stepper_x]
uart_pin: PF1
run_current: 0.500
# stealthchop_threshold: 0.001

# 设置滑轨上存在的不同电机
[dual_carriage]
axis: x                     # 额外滑车所在的轴（x或者y）。必须提供这个参数。
dir_pin: !PF2
step_pin: PF3
enable_pin: !PF4
microsteps: 16
rotation_distance: 40
endstop_pin: !H1:gpio6
position_endstop: 467
position_min: -5
position_max: 467
homing_speed: 100
[tmc2208 dual_carriage]
uart_pin: PF10
run_current: 0.500
# stealthchop_threshold: 0.001

[stepper_y]
dir_pin: !PC0
step_pin: PC1
enable_pin: !PC2
microsteps: 16
rotation_distance: 40
endstop_pin: !PG14
position_endstop: -3
position_min: -3
position_max: 400
homing_speed: 100
[tmc2208 stepper_y]
uart_pin: PC3
run_current: 0.600
stealthchop_threshold: 10

[stepper_z]
# dir_pin: PA1
# step_pin: PC4
# enable_pin: !PC5
dir_pin: PB6
step_pin: PB7
enable_pin: !PE0
microsteps: 16
rotation_distance: 4
endstop_pin: probe:z_virtual_endstop
#position_endstop: 0
position_min: -5
position_max: 400
homing_speed: 10
[tmc2208 stepper_z]
# uart_pin: PF14
uart_pin: PE1
run_current: 0.850
stealthchop_threshold: 99999

[heater_bed]
heater_pin: PC7
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PB1
control: pid
pid_Kp: 325.10              # 自动调控PID值命令: PID_CALIBRATE HEATER=heater_bed TARGET=60
pid_Ki: 63.35
pid_Kd: 417.10
min_temp: 0
max_temp: 130


########################################
# home & probe & 3Dtouch
########################################
[safe_z_home]
home_xy_position: 200, 200
#   一个X，Y坐标（例如100，100），在这个坐标上应该进行Z归位。
#   必须提供此参数
speed: 100.0
#   工具头移动到安全Z原点的速度。
#   默认为50毫米/秒
z_hop: 5
#   在归位前抬升Z轴的距离（mm）。这将用于任何归位命令，即使它没有将Z轴归位。
#   如果Z轴已经归位，并且当前的Z轴位置小于z_hop，那么这条命令将把打印头提升到z_hop的高度。如果
#   Z轴尚未归位，则打印头将被提升z_hop的高度。
#   默认不执行Z抬升。
#z_hop_speed: 15.0
#   在归位之前，Z轴抬升的速度（单位：mm/s）。
#   默认为15mm/s。
#move_to_previous: False
#   当设置为 "True "时，X轴和Y轴在Z轴归位后会重置到之前的位置。
#   默认为false。


########################################
# input_shaper
########################################
[input_shaper]
# 这里为空是因为独立双喷头, 具体设置查看[delayed_gcode Init_shaper]

[resonance_tester]
probe_points: 200, 200, 20
#   A list of X, Y, Z coordinates of points (one point per line) to test
#   resonances at. At least one point is required. Make sure that all
#   points with some safety margin in XY plane (~a few centimeters)
#   are reachable by the toolhead.
accel_chip: adxl345 hotend_0 #, adxl345 hotend_1
#   A name of the accelerometer chip to use for measurements. If
#   adxl345 chip was defined without an explicit name, this parameter
#   can simply reference it as "accel_chip: adxl345", otherwise an
#   explicit name must be supplied as well, e.g. "accel_chip: adxl345
#   my_chip_name". Either this, or the next two parameters must be
#   set.
#accel_chip_x:
#accel_chip_y:
#   Names of the accelerometer chips to use for measurements for each
#   of the axis. Can be useful, for instance, on bed slinger printer,
#   if two separate accelerometers are mounted on the bed (for Y axis)
#   and on the toolhead (for X axis). These parameters have the same
#   format as 'accel_chip' parameter. Only 'accel_chip' or these two
#   parameters must be provided.
#max_smoothing:
#   Maximum input shaper smoothing to allow for each axis during shaper
#   auto-calibration (with 'SHAPER_CALIBRATE' command). By default no
#   maximum smoothing is specified. Refer to Measuring_Resonances guide
#   for more details on using this feature.
#min_freq: 5
#   Minimum frequency to test for resonances. The default is 5 Hz.
#max_freq: 133.33
#   Maximum frequency to test for resonances. The default is 133.33 Hz.
#accel_per_hz: 75
#   This parameter is used to determine which acceleration to use to
#   test a specific frequency: accel = accel_per_hz * freq. Higher the
#   value, the higher is the energy of the oscillations. Can be set to
#   a lower than the default value if the resonances get too strong on
#   the printer. However, lower values make measurements of
#   high-frequency resonances less precise. The default value is 75
#   (mm/sec).
#hz_per_sec: 1
#   Determines the speed of the test. When testing all frequencies in
#   range [min_freq, max_freq], each second the frequency increases by
#   hz_per_sec. Small values make the test slow, and the large values
#   will decrease the precision of the test. The default value is 1.0
#   (Hz/sec == sec^-2).


########################################
# Fan configuration
########################################
[fan_generic CASE_FAN]
pin: PB12
shutdown_speed: 0
off_below: 0.3

[temperature_fan  host_temperature]
pin: PD13
shutdown_speed: 0
sensor_type: temperature_host
sensor_path: /sys/class/thermal/thermal_zone0/temp
min_temp: 0
max_temp: 100
control: watermark
# target_temp: 40.0
#   A temperature (in Celsius) that will be the target temperature.
#   The default is 40 degrees.


########################################
# LED
########################################
[led Status_led]
blue_pin: PB2
cycle_time: 1.000
initial_BLUE: 0.5

[neopixel RGB]
pin: PD7


########################################
# output pin & input pin(button)
########################################
# [gcode_button my_gcode_button]
# pin: ^!PC6
# #   连接到按钮的引脚。必须提供此参数。
# #analog_range:
# #   两个逗号分隔的阻值(单位：欧姆)，指定了按钮的最小和最大电阻。
# #   如果提供了 analog_range ，必须使用一个模拟功能的引脚。默认情况下为按钮使用数字GPIO。
# #   analog_pullup_resistor: 当定义 analog_range 时的上拉电阻(欧姆)。默认为4700欧姆。
# press_gcode:
#   SET_LED LED="RGB" RED=1 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1
# #   当按钮被按下时要执行的 G-Code 命令序列，支持G-Code模板。必须提供此参数。
# #release_gcode:
# #   当按钮被释放时要执行的G-Code命令序列，支持G-Code模板。默认在按钮释放时不运行任何命令。

[output_pin light]
pin: PD3
pwm: true
cycle_time: 0.01      # 0.01s, 10ms
value: 1              # 在MCU配置期间最初设置引脚的值。默认为0（低电压）。
shutdown_value: 0     # 在MCU关闭事件中设置引脚的值。默认为0（低电压）。

# [output_pin power_on]
# pin: PG8
# value: 1              # 在MCU配置期间最初设置引脚的值。默认为0（低电压）。
# shutdown_value: 0     # 在MCU关闭事件中设置引脚的值。默认为0（低电压）。

