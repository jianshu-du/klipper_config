[mcu ECB]
# serial: /dev/serial/by-id/usb-Klipper_rp2040_1120022408010008-if00
serial: /dev/serial/by-id/usb-Klipper_rp2040_1120022408010011-if00
restart_method: command
# restart_method: rpi_usb
#canbus_uuid: 11aa22bb33cc

#### #### #### #### ####
# extruder
#### #### #### #### ####
[extruder]
dir_pin: !ECB:gpio0
step_pin: ECB:gpio1
enable_pin: !ECB:gpio7
microsteps: 16
rotation_distance: 4.28
nozzle_diameter: 0.4
filament_diameter: 1.75
max_extrude_cross_section: 2.5  # 最大的线条横截面积,不设置就是4.0*喷嘴孔径^2
max_extrude_only_distance: 600  # 单次最大挤出长度
heater_pin: !ECB:gpio25
pullup_resistor: 4700
sensor_type: EPCOS 100K B57560G104F
sensor_pin: ECB:gpio28
control: pid  # pid_Kp=16.075 pid_Ki=0.678 pid_Kd=95.243 # pid_Kp=34.767 pid_Ki=5.151 pid_Kd=58.667 # pid_Kp=41.593 pid_Ki=6.602 pid_Kd=65.508
pid_Kp: 41.593
pid_Ki: 6.602
pid_Kd: 65.508
min_temp: 0
max_temp: 300
pressure_advance: 0.025

[tmc2208 extruder]
uart_pin: ECB:gpio2
run_current: 0.500
# hold_current: 0.100
sense_resistor: 0.100
# stealthchop_threshold: 30

[filament_switch_sensor Filament_Sensor]
switch_pin: ECB:gpio8

#### #### #### ####
# Fan
#### #### #### ####
# This is a fan installed in the nozzle throat, This is a fan that automatically rotates by detecting the heating condition and is used to dissipate heat from the nozzle throat.
[heater_fan Hotend_Fan]
pin: !ECB:gpio12
tachometer_pin: ^ECB:gpio13
heater: extruder
heater_temp: 80

[fan_generic Back-Cooling_Fan]
pin: !ECB:gpio22
# name: Cooling_fan
[fan]
pin: !ECB:gpio9
tachometer_pin: ^ECB:gpio10

#### #### #### ####
# Button
#### #### #### ####
[gcode_button load_button]
pin: ^!ECB:gpio24
press_gcode:
  #SET_PIN PIN=pa13_pin VALUE=1.0
  G91
  G1 Z+5 F300
  G90
release_gcode:
  #SET_PIN PIN=pa13_pin VALUE=0.0

# [gcode_button heater_current]
# pin: ECB:gpio29
# press_gcode:
#   SET_LED LED="RGB" RED=0.8 GREEN=0.8 BLUE=0.8 SYNC=0 TRANSMIT=1
# release_gcode:
#   SET_LED LED="RGB" RED=0 GREEN=0 BLUE=0 SYNC=0 TRANSMIT=1

# [output_pin button1]
# pin: 

# #### #### #### ####
# # input shaper
# #### #### #### ####
[input_shaper]
shaper_freq_x: 103.2  #59.6  62.6
# #   输入整形器的 X 轴频率(Hz)。通常这是希望被输入整形器消除的
# #   X 轴共振频率。对于更复杂的整形器，例如2- 和 3-hump EI 输入
# #   整形器，设置这个参数可能需要考虑其他特性。
# #   默认值是0，禁用 X 轴输入整形。
shaper_freq_y: 30.6  #39.4  39
# #   输入整形器的 Y 轴频率(Hz)。通常这是希望被输入整形器消除的
# #   Y 轴共振频率。对于更复杂的整形器，例如2- 和 3-hump EI 输入
# #   整形器，设置这个参数可能需要考虑其他特性。
# #   默认值是0，禁用 Y 轴输入整形。
# # shaper_type: mzv
# #   用于 X 和 Y 轴的输入整形器。支持的输入整形器有 zv、mzv、
# #   zvd、ei、2hump_ei 和 3hump_ei。
# #   默认为 mzv 输入整形器。
shaper_type_x: mzv
shaper_type_y: mzv
# #   如果没有设置 shaper_type，可以用这两个参数来单独配置 X
# #   和 Y 轴的 输入整形器。
# #   该参数支持全部shaper_type 支持的选项。
damping_ratio_x: 0.1
damping_ratio_y: 0.1
# #   X 和 Y 轴的共振抑制比例，可以用来改善振动抑制效果。
# #   默认值是 0.1，适用于大多数打印机。
# #   大多数情况下不需要调整这个值。

[adxl345 hotend]
cs_pin: ECB:gpio17
#spi_bus:
spi_software_sclk_pin: ECB:gpio18
spi_software_mosi_pin: ECB:gpio19
spi_software_miso_pin: ECB:gpio16
axes_map: z, -y, x
  # 打印机的X、Y和Z轴的加速度计轴。
  # 如果加速度计的安装方向与打印机的方向不一致，可能需要修改该设定。
  # 例如，可以将其设置为"y, x, z"来交换X和Y轴。
  # 如果加速度计方向是相反的，可能需要反转相应轴（例如，"x, z, -y"）。
  # 默认是"x, y, z"。
# rate: 3200
#   ADXL345的输出数据速率。ADXL345支持的数据速率有3200、1600、800、400、200、100、50和25。
#   请注意，不建议将此速率从默认的3200改为低于800的速率，这将大大影响共振测量的质量。

[resonance_tester]
accel_chip_x: adxl345 hotend
accel_chip_y: adxl345 bed
probe_points: 117.5, 117.5, 20  # an example
min_freq: 20   # 测试谐振的最小频率。默认为5Hz。
max_freq: 150  # 测试谐振的最大频率。默认为133.33 Hz。
# accel_per_hz: 200
#   这个参数用于决定测试一个特定的频率的加速度： accel = accel_per_hz * freq。
#   数值越大加速度越高，振荡的能量就越大。如果打印机上的共振太强，可以设置为比默认值更低的值。然而，较低的值会使高频共振的测量不那么精确。
#   默认为75mm/s。

#### #### #### ####
# LED
#### #### #### ####
[neopixel RGB]
pin: ECB:gpio20

[led Status_led]
blue_pin: ECB:gpio11
cycle_time: 1.000
initial_BLUE: 0.5

#### #### #### ####
# ABL
#### #### #### ####
# [bltouch]
# sensor_pin: ^ECB:gpio14  # 传感器脚,即min脚
# control_pin: ECB:gpio15  # 控制脚,在bltouch中是舵机脚servo
# x_offset: 27
# #   探针和喷嘴在x轴上的距离（以mm为单位）。
# #   默认为0。
# y_offset: -15
# #   探针和喷嘴在y轴上的距离（以mm为单位）。
# #   默认为0。
# z_offset: 2.55
# #   当探针触发时，床和喷嘴之间的距离（以mm为单位）。
# #   必须提供此参数。
# speed: 15.0
# #   探测时Z轴的速度（以mm/s为单位）。
# #   默认为5mm/s。
# lift_speed: 20
# #   在样本之间提升探针时Z轴的速度（以mm/s为单位）。
# #   默认使用与'speed'参数相同的值。
# samples: 3
# #   探测每个点的次数。探测的z值将被平均。
# #   默认是探测1次。
# #sample_retract_dist: 2.0
# #   在每个样本之间提升打印头的距离（以mm为单位）（如果采样超过一次）。
# #   默认为2mm。
# samples_result: median
# #   采样超过一次时的计算方法 - median(中位数) 或average（平均值）。
# #   默认为 average。
# # samples_tolerance: 0.100
# #   样本可能与其他样本的最大Z距离（以mm为单位）差异。
# #   如果超出此公差，则报告错误或重新开始尝试（参见samples_tolerance_retries）。
# #   默认为0.100mm。
# samples_tolerance_retries: 2
# #   如果发现超过samples_tolerance的样本，重试的次数。
# #   在重试时，丢弃所有当前的样本并重新开始探针尝试。
# #   如果在给定的重试次数内未获得有效的样本集，则报告错误。
# #   默认值为0，这导致在第一个超过samples_tolerance的样本上报告错误。

########################################
# Probe configuration
########################################
# Before printing the PROBE_CALIBRATE command needs to be issued
# to run the probe calibration procedure, described at
# docs/Probe_Calibrate.md, to find the correct z_offset.
[probe]
pin: ^!ECB:gpio14
x_offset: 25.95
y_offset: 13
z_offset: 1.8
speed: 5
# samples: 1
# sample_retract_dist: 0.5
# samples_result: median
samples_tolerance: 0.8


[safe_z_home]                           # enable for BLTouch
home_xy_position: 160, 160
speed: 120
z_hop: 10                               # Move up 10mm
z_hop_speed: 10

[bed_mesh]                              # enable for BLTouch
speed: 250
horizontal_move_z: 6                    # The Z coordinate the probe rises to prior to traveling between points.Default Value: 5
mesh_min: 26, 15                        # The first probed coordinate, nearest to the origin. This coordinate is relative to the probe's location.
mesh_max: 320, 320                      # The probed coordinate farthest farthest from the origin. 
                                        # This is not necessarily the last point probed, as the probing process occurs in a zig-zag fashion. 
                                        # As with mesh_min, this coordiante is relative to the probe's location.
probe_count: 11, 11
algorithm: bicubic                      # The algorithm used to interpolate the mesh. 
                                        # May belagrangeorbicubic.Lagrange interpolation is capped at 6 probed points as oscillation tends tooccur with a larger number of samples. 
                                        # Bicubic interpolation requires aminimum of 4 probed points along each axis, if less than 4 points arespecified then lagrange sampling is forced. 
                                        # Ifmesh_ppsis set to 0 thenthis value is ignored as no mesh interpolation is done.
